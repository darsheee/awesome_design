@mixin min-media($breakpoint) {
    @media (min-width: $breakpoint) {
        @content;
    }
}

@mixin between-media($lowpoint, $highpoint) {
    @media (min-width: $lowpoint) and (max-width: $highpoint) {
        @content;
    }
}

@mixin max-media($breakpoint) {
    @media (max-width: $breakpoint - 1) {
        @content;
    }
}

@mixin arrow-down($color: transparent) {
  content: " ";
  display: block;
  height: 0.625rem;
  width: 0.625rem;
  border: 3px solid $color;
  border-radius: $radius-small;
  border-right: 0;
  border-top: 0;
  transform: rotate(-45deg);
  transform-origin: center;
  pointer-events: none;
}

@mixin arrow-right($color: transparent) {
  content: " ";
  display: block;
  height: 0.625rem;
  width: 0.625rem;
  border: 3px solid $color;
  border-radius: $radius-small;
  border-right: 0;
  border-top: 0;
  transform: rotate(-135deg);
  transform-origin: center;
  pointer-events: none;
}

@mixin absolute-center {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
}


  // This mixin can be used to set the object-fit:
  // @include object-fit(contain);
  // or object-fit and object-position:
  // @include object-fit(cover, top);

@mixin object-fit($fit: fill, $position: null){
  -o-object-fit: $fit;
     object-fit: $fit;
  @if $position {
    -o-object-position: $position;
       object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
  }

@mixin cover-background($position) {
  @include absolute-center;
  @include object-fit(cover, $position);
  z-index: 1;
  width: 100%;
  height: 100%;
}


// Placeholders
@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

%unselectable {
  @include unselectable;
}

@mixin overlay($offset: 0) {
  bottom: $offset;
  left: $offset;
  position: absolute;
  right: $offset;
  top: $offset;
}

%overlay {
  @include overlay;
}